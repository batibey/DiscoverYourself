@using DiscoverYourself.Models.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model DiscoverYourself.Models.RequestModels.EducationGoalRequestModel
@{
    Layout = null;
    var userId =  ViewBag.UserId;
}

<!DOCTYPE html>
<html>
<head>
    <title>Education Goals</title>
    <link rel="stylesheet" href="~/css/education_goals.css" asp-append-version="true">
</head>
<body>
<div class="container">
    <h1>Education Goals</h1>

    <form action="/EducationGoals/Save" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" id="userId" name="UserId" value="@userId">

        <div>
            <label for="Title">Title</label>
            <input type="text" class="form-control" id="Title" name="Title" required/>
        </div>

        <div>
            <label for="Description">Description</label>
            <textarea class="form-control" id="Description" name="Description" rows="2" required></textarea>
        </div>

        <div>
            <label for="StartDate">Start Date</label>
            <input type="date" class="form-control" id="StartDate" name="StartDate" required/>
        </div>

        <div>
            <label for="EndDate">End Date</label>
            <input type="date" class="form-control" id="EndDate" name="EndDate" required/>
        </div>

        <div>
            <label>Topics</label>
            <select asp-for="Topics">
                @foreach (var topics in Enum.GetValues(typeof(enmTopics)))
                {
                    <option value="@topics">@topics</option>
                }
            </select>
        </div>

        <div>
            <label>Difficulty</label>
            <select asp-for="Difficulty">
                @foreach (var difficulty in Enum.GetValues(typeof(enmDifficultyLevel)))
                {
                    <option value="@difficulty">@difficulty</option>
                }
            </select>
        </div>

        <div>
            <label for="TargetAudience">Target Audience</label>
            <input type="text" class="form-control" id="TargetAudience" name="TargetAudience" required/>
        </div>

        <div>
            <label for="Milestones">Mile Stones</label>
            <textarea class="form-control" id="Milestones" name="Milestones" rows="3"></textarea>
        </div>

        <div>
            <label for="SuccessCriteria">Success Criteria</label>
            <textarea class="form-control" id="SuccessCriteria" name="SuccessCriteria" rows="3" required></textarea>
        </div>

        <div>
            <label class="form-check-label" for="IsCompletedCheckbox">Is Complete</label>
            <input type="hidden" name="IsCompleted" id="IsCompletedHidden" value="false"/>
            <input type="checkbox"
                   class="form-check-input"
                   id="IsCompletedCheckbox"
                   value="true"
                   @(Model?.IsCompleted == true ? "checked" : "")/>

        </div>
        <button type="submit" class="btn btn-primary mt-3">Save</button>
    </form>

</div>
</body>

<script>
    document.getElementById("IsCompletedCheckbox").addEventListener("change", function () {
        document.getElementById("IsCompletedHidden").value = this.checked ? "true" : "false";
    });
</script>
</html>
